# -*- coding: utf-8 -*-
#####################################################################################################################
#                                                                                                                   #
# Домашнее задание к уроку 1                                                                                        #
#                                                                                                                   #
# Задание №6                                                                                                        #
# По введенным пользователем длинам трех отрезков определить, можно-ли составить из этих отрезков треугольник.      #
# Если да, определить, будет-ли треугольник разносторонним, равнобедренным, или равносторонним.                     #
#                                                                                                                   #
# MIT License                                                                                                       #
# Copyright (c) 2020 Michael Nikitenko                                                                              #
#                                                                                                                   #
#####################################################################################################################


def input_numbers():
    """
    Спрашивает у пользователя три числа и приводит введённые пользователем строки к числовому формату,
    проводит проверку типов и возвращает список длин отрезков и результат проверки типов введенных пользователем данных

    :return: list Список чисел; bool False - пользователь ввёл текст или околесицу
    """
    numbers = []
    numbers.append(input('Введите длину первого отрезка:  '))
    numbers.append(input('Введите длину второго отрезка:  '))
    numbers.append(input('Введите длину третьего отрезка: '))
    res = []
    for nbr in numbers:
        try:
            res.append(int(nbr))
        except ValueError:
            try:
                res.append(float(nbr))
            except ValueError:
                return False
    return sorted(res)


def check_triangle(sides):
    """
    Принимает список из трех чисел, либо булевое False (если пользователь ввел неверные данные). Вычисляет существует
    ли треугольник с данными длинами сторон, определяет его тип и возвращает строку с информацией о треугольнике.

    :param sides: list Список с длинами трех отрезков or bool False в случае неверного ввода
    :return: str Информация о том какой треугольник можно построить из данных длин отрезков.
    """
    if sides == False:
        return 'Вы ввели неверное(ые) значение(я). Необходимо ввести целые числа и/или десятичные дроби'
    res = 'Данный треугольник '
    if sides[0] + sides[1] > sides[2]:
        res = res + 'cуществует'
        if sides[0] == sides[1] and sides[1] == sides[2]:
            res = res + ' и является раВносторонним'
        elif sides[0] == sides[1] or sides[1] == sides[2]:
            res = res + ' и является равнобедренным'
        else:
            res = res + ' и является раЗносторонним'
        if sides[0]**2 + sides[1]**2 == sides[2]**2:
            res = res + ' , а так же прямоугольным.'
    else:
        res = res + 'не существует'
    return res


if __name__ == '__main__':
    print('Lesson 1 task 6')
    sides = input_numbers()
    print(check_triangle(sides))